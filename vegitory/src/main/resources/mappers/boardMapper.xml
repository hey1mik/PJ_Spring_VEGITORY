<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vegitory.persistence.BoardDAO">
	<select id="freeBoardList" resultType="BoardDTO">
	<!-- 게시글 목록을 출력할때 쓰는 SQL문 -->
		 <include refid="paging_header"/>
		 SELECT bno, type, title, writer, name, updatedate, viewcnt, replycnt, goodcnt, show
		 FROM tbl_board b, tbl_member m
		 <include refid="search"></include>
		 <if test="map.sort_option == 'new'">
		 	ORDER BY b.bno DESC
		 </if>
		 <if test="map.sort_option == 'cnt'">
		 	ORDER BY viewcnt DESC
		 </if>
		 <if test="map.sort_option == 'reply'">
		 	ORDER BY replycnt DESC
		 </if>
		 <if test="map.sort_option == 'good'">
		 	ORDER BY goodcnt DESC
		 </if>
		 <include refid="paging_footer"/>
		 <!-- m.name과 비교함으로써 회원인 사람들의 글만 가져오게함 -->
	</select>
	
	<select id="countArticle" resultType="Integer">
		<!-- 페이지네이션에 쓰는 SQL문 -->
		 SELECT COUNT(*) 
		 FROM tbl_board b, tbl_member m 
		<include refid="search"></include>
	</select>
	
	
	<!-- 공통 SQL들은 밖으로 빼준다. -->
	<sql id="paging_header">
		SELECT * 
		FROM (
			SELECT rownum AS rnum, A.*
			FROM(
	</sql>	
		
	<sql id="paging_footer">		
			)A
		) WHERE rnum BETWEEN #{map.start} AND #{map.end}	
	</sql>
	
	<sql id="search">
		<choose>
		 	<when test="map.search_option != 'all'">
		 		<!-- 검색 옵션이 있을때 -->
		 		WHERE b.writer = m.name
		 		      AND b.show = 'y'
		 		      AND #{map.search_option} LIKE #{map.keyword}
		 	</when>
		 	<otherwise>
		 	<!-- 검색 옵션이 없을때 -->
		 		WHERE b.writer = m.name
		 			AND b.show = 'y'
		 			AND (title LIKE #{map.keyword}
		 						OR content LIKE #{map.keyword}
		 						OR name LIKE #{map.keyword})
		 	</otherwise>
		 </choose>
	</sql>
	
	<select id="freeBoardView" resultType="BoardDTO">
		<!-- 상세 게시글 가져오는데 쓰이는 SQL 문 -->
		 SELECT * FROM tbl_board 
		 WHERE bno = #{bno}
	</select>
	
	<update id="increaseViewCnt">
		UPDATE tbl_board
		SET viewcnt = viewcnt + 1
		WHERE bno = #{bno}
	</update>
	<update id="delBoard">
		UPDATE tbl_board
		SET show = 'n'
		WHERE bno = #{bno}
	</update>
	<update id="replyCntUpdate">
		UPDATE tbl_board
		<if test="map.type == 'plus'">
		SET replycnt = replycnt + 1
		WHERE bno = #{map.bno}
		</if>
		<if test="map.type == 'minus'">
		SET replycnt = replycnt - 1
		WHERE bno = #{map.bno}
		</if>		
	</update>
	<insert id="write">
		INSERT INTO tbl_board(bno, type, title, content, writer)
		VALUES(seq_board.NEXTVAL, #{board.type}, #{board.title}, #{board.content}, #{board.writer})
	</insert>
	<update id="updateBoard">
		UPDATE tbl_board
		SET type = #{board.type},
			title = #{board.title},
			content = #{board.content},
			updatedate = SYSDATE
		WHERE bno = #{board.bno} 
	</update>
</mapper>